Token: IDENTIFICADOR -> class
Token: IDENTIFICADOR -> Grafo
Token: ABRE_CHAVES -> {
Token: RESERVADA -> int
Token: IDENTIFICADOR -> mat
Token: ABRE_VETOR -> [
Token: FECHA_VETOR -> ]
Token: ABRE_VETOR -> [
Token: FECHA_VETOR -> ]
Token: IDENTIFICADOR -> n
Token: PONTO_E_VIRGULA -> ;
Token: RESERVADA -> constructor
Token: ABRE_PARENTESES -> (
Token: RESERVADA -> int
Token: IDENTIFICADOR -> m
Token: ABRE_VETOR -> [
Token: FECHA_VETOR -> ]
Token: ABRE_VETOR -> [
Token: FECHA_VETOR -> ]
Token: IDENTIFICADOR -> in
Token: IDENTIFICADOR -> n
Token: FECHA_PARENTESES -> )
Token: ABRE_CHAVES -> {
Token: IDENTIFICADOR -> mat
Token: ATRIBUICAO -> =
Token: IDENTIFICADOR -> m
Token: PONTO_E_VIRGULA -> ;
Token: IDENTIFICADOR -> n
Token: ATRIBUICAO -> =
Token: IDENTIFICADOR -> num
Token: PONTO_E_VIRGULA -> ;
Token: FECHA_CHAVES -> }
Token: RESERVADA -> int
Token: IDENTIFICADOR -> vizinhos
Token: ABRE_PARENTESES -> (
Token: RESERVADA -> int
Token: IDENTIFICADOR -> i
Token: RESERVADA -> int
Token: IDENTIFICADOR -> j
Token: FECHA_PARENTESES -> )
Token: ABRE_CHAVES -> {
Token: RESERVADA -> if
Token: ABRE_PARENTESES -> (
Token: IDENTIFICADOR -> mat
Token: ABRE_VETOR -> [
Token: IDENTIFICADOR -> i
Token: FECHA_VETOR -> ]
Token: ABRE_VETOR -> [
Token: IDENTIFICADOR -> j
Token: FECHA_VETOR -> ]
Token: IGUAL -> ==
Token: INT_CONSTANTE -> 1
Token: FECHA_PARENTESES -> )
Token: RESERVADA -> return
Token: INT_CONSTANTE -> 1
Token: RESERVADA -> return
Token: INT_CONSTANTE -> 0
Token: PONTO_E_VIRGULA -> ;
Token: FECHA_CHAVES -> }
Token: RESERVADA -> int
Token: ABRE_VETOR -> [
Token: FECHA_VETOR -> ]
Token: IDENTIFICADOR -> listaVizinhos
Token: ABRE_PARENTESES -> (
Token: RESERVADA -> int
Token: IDENTIFICADOR -> i
Token: FECHA_PARENTESES -> )
Token: ABRE_CHAVES -> {
Token: RESERVADA -> int
Token: IDENTIFICADOR -> lista
Token: ABRE_VETOR -> [
Token: FECHA_VETOR -> ]
Token: ATRIBUICAO -> =
Token: RESERVADA -> new
Token: RESERVADA -> int
Token: ABRE_VETOR -> [
Token: IDENTIFICADOR -> n
Token: FECHA_VETOR -> ]
Token: RESERVADA -> int
Token: IDENTIFICADOR -> j
Token: IDENTIFICADOR -> tamLista
Token: PONTO_E_VIRGULA -> ;
Token: IDENTIFICADOR -> tamLista
Token: ATRIBUICAO -> =
Token: INT_CONSTANTE -> 0
Token: PONTO_E_VIRGULA -> ;
Token: RESERVADA -> for
Token: ABRE_PARENTESES -> (
Token: IDENTIFICADOR -> j
Token: ATRIBUICAO -> =
Token: INT_CONSTANTE -> 0
Token: PONTO_E_VIRGULA -> ;
Token: IDENTIFICADOR -> j
Token: MENOR -> <
Token: IDENTIFICADOR -> n
Token: PONTO_E_VIRGULA -> ;
Token: IDENTIFICADOR -> j
Token: ATRIBUICAO -> =
Token: IDENTIFICADOR -> j
Token: SOMA -> +
Token: INT_CONSTANTE -> 1
Token: FECHA_PARENTESES -> )
Token: RESERVADA -> if
Token: ABRE_PARENTESES -> (
Token: IDENTIFICADOR -> mat
Token: ABRE_VETOR -> [
Token: IDENTIFICADOR -> i
Token: FECHA_VETOR -> ]
Token: ABRE_VETOR -> [
Token: IDENTIFICADOR -> j
Token: FECHA_VETOR -> ]
Token: IGUAL -> ==
Token: INT_CONSTANTE -> 1
Token: FECHA_PARENTESES -> )
Token: ABRE_CHAVES -> {
Token: IDENTIFICADOR -> lista
Token: ABRE_VETOR -> [
Token: IDENTIFICADOR -> tam
Token: UNDERLINE -> _
Token: IDENTIFICADOR -> Lista
Token: FECHA_VETOR -> ]
Token: ATRIBUICAO -> =
Token: IDENTIFICADOR -> j
Token: PONTO_E_VIRGULA -> ;
Token: IDENTIFICADOR -> tamLista
Token: ATRIBUICAO -> =
Token: IDENTIFICADOR -> tamLista
Token: SOMA -> +
Token: INT_CONSTANTE -> 1
Token: PONTO_E_VIRGULA -> ;
Token: FECHA_CHAVES -> }
Token: PONTO_E_VIRGULA -> ;
Token: RESERVADA -> if
Token: ABRE_PARENTESES -> (
Token: IDENTIFICADOR -> tamLista
Token: DIFERENTE -> !=
Token: IDENTIFICADOR -> n
Token: FECHA_PARENTESES -> )
Token: IDENTIFICADOR -> lista
Token: ABRE_VETOR -> [
Token: IDENTIFICADOR -> tamLista
Token: FECHA_VETOR -> ]
Token: ATRIBUICAO -> =
Token: SUBTRACAO -> -
Token: INT_CONSTANTE -> 1
Token: PONTO_E_VIRGULA -> ;
Token: RESERVADA -> return
Token: IDENTIFICADOR -> lista
Token: PONTO_E_VIRGULA -> ;
Token: FECHA_CHAVES -> }
Token: RESERVADA -> int
Token: IDENTIFICADOR -> start
Token: ABRE_PARENTESES -> (
Token: FECHA_PARENTESES -> )
Token: ABRE_CHAVES -> {
Token: RESERVADA -> int
Token: IDENTIFICADOR -> m
Token: ABRE_VETOR -> [
Token: FECHA_VETOR -> ]
Token: ABRE_VETOR -> [
Token: FECHA_VETOR -> ]
Token: IDENTIFICADOR -> n
Token: IDENTIFICADOR -> lista
Token: ABRE_VETOR -> [
Token: FECHA_VETOR -> ]
Token: IDENTIFICADOR -> i
Token: IDENTIFICADOR -> j
Token: PONTO_E_VIRGULA -> ;
Token: RESERVADA -> print
Token: STRING_CONSTANTE -> "digite o número de vertices> "
Token: PONTO_E_VIRGULA -> ;
Token: RESERVADA -> read
Token: IDENTIFICADOR -> n
Token: PONTO_E_VIRGULA -> ;
Token: IDENTIFICADOR -> m
Token: ABRE_VETOR -> [
Token: ABRE_VETOR -> [
Token: FECHA_VETOR -> ]
Token: ABRE_VETOR -> [
Token: FECHA_VETOR -> ]
Token: ATRIBUICAO -> =
Token: RESERVADA -> new
Token: RESERVADA -> int
Token: ABRE_VETOR -> [
Token: IDENTIFICADOR -> n
Token: FECHA_VETOR -> ]
Token: ABRE_VETOR -> [
Token: IDENTIFICADOR -> n
Token: FECHA_VETOR -> ]
Token: PONTO_E_VIRGULA -> ;
Token: RESERVADA -> for
Token: ABRE_PARENTESES -> (
Token: IDENTIFICADOR -> i
Token: ATRIBUICAO -> =
Token: INT_CONSTANTE -> 0
Token: PONTO_E_VIRGULA -> ;
Token: IDENTIFICADOR -> i
Token: MENOR -> <
Token: IDENTIFICADOR -> n
Token: PONTO_E_VIRGULA -> ;
Token: IDENTIFICADOR -> i
Token: ATRIBUICAO -> =
Token: IDENTIFICADOR -> i
Token: SOMA -> +
Token: INT_CONSTANTE -> 1
Token: FECHA_PARENTESES -> )
Token: ABRE_CHAVES -> {
Token: RESERVADA -> print
Token: STRING_CONSTANTE -> "digite o elemento"
Token: PONTO_E_VIRGULA -> ;
Token: RESERVADA -> print
Token: IDENTIFICADOR -> i
Token: PONTO_E_VIRGULA -> ;
Token: RESERVADA -> print
Token: STRING_CONSTANTE -> ""
Token: PONTO_E_VIRGULA -> ;
Token: RESERVADA -> print
Token: IDENTIFICADOR -> j
Token: PONTO_E_VIRGULA -> ;
Token: RESERVADA -> print
Token: STRING_CONSTANTE -> ":"
Token: PONTO_E_VIRGULA -> ;
Token: RESERVADA -> read
Token: IDENTIFICADOR -> m
Token: IDENTIFICADOR -> m
Token: ABRE_VETOR -> [
Token: IDENTIFICADOR -> i
Token: FECHA_VETOR -> ]
Token: ABRE_VETOR -> [
Token: IDENTIFICADOR -> j
Token: FECHA_VETOR -> ]
Token: PONTO_E_VIRGULA -> ;
Token: FECHA_CHAVES -> }
Token: FECHA_CHAVES -> }
Token: RESERVADA -> print
Token: STRING_CONSTANTE -> "digite um vertice"
Token: PONTO_E_VIRGULA -> ;
Token: RESERVADA -> read
Token: IDENTIFICADOR -> v1
Token: PONTO_E_VIRGULA -> ;
Token: RESERVADA -> print
Token: STRING_CONSTANTE -> "digite o outro vertice para verificar vizinhança:"
Token: PONTO_E_VIRGULA -> ;
Token: RESERVADA -> read
Token: IDENTIFICADOR -> v2
Token: PONTO_E_VIRGULA -> ;
Token: RESERVADA -> if
Token: ABRE_PARENTESES -> (
Token: IDENTIFICADOR -> vizinhos
Token: ABRE_PARENTESES -> (
Token: RESERVADA -> int
Token: IDENTIFICADOR -> i
Token: RESERVADA -> int
Token: IDENTIFICADOR -> j
Token: FECHA_PARENTESES -> )
Token: IGUAL -> ==
Token: INT_CONSTANTE -> 1
Token: FECHA_PARENTESES -> )
Token: RESERVADA -> print
Token: STRING_CONSTANTE -> "os vertices sao vizinhos"
Token: PONTO_E_VIRGULA -> ;
Token: RESERVADA -> else
Token: RESERVADA -> print
Token: STRING_CONSTANTE -> "os vertices nao sao vizinhos"
Token: RESERVADA -> print
Token: STRING_CONSTANTE -> "digite um vertice: "
Token: PONTO_E_VIRGULA -> ;
Token: RESERVADA -> read
Token: IDENTIFICADOR -> v1
Token: PONTO_E_VIRGULA -> ;
Token: IDENTIFICADOR -> lista
Token: ATRIBUICAO -> =
Token: IDENTIFICADOR -> listaVizinhos
Token: ABRE_PARENTESES -> (
Token: IDENTIFICADOR -> v1
Token: FECHA_PARENTESES -> )
Token: PONTO_E_VIRGULA -> ;
Token: RESERVADA -> print
Token: STRING_CONSTANTE -> "os vertices vizinhos a"
Token: PONTO_E_VIRGULA -> ;
Token: RESERVADA -> print
Token: IDENTIFICADOR -> v1
Token: PONTO_E_VIRGULA -> ;
Token: RESERVADA -> print
Token: STRING_CONSTANTE -> "são "
Token: PONTO_E_VIRGULA -> ;
Token: RESERVADA -> for
Token: ABRE_PARENTESES -> (
Token: IDENTIFICADOR -> i
Token: ATRIBUICAO -> =
Token: INT_CONSTANTE -> 0
Token: PONTO_E_VIRGULA -> ;
Token: IDENTIFICADOR -> i
Token: MENOR -> <
Token: IDENTIFICADOR -> n
Token: PONTO_E_VIRGULA -> ;
Token: IDENTIFICADOR -> i
Token: ATRIBUICAO -> =
Token: IDENTIFICADOR -> i
Token: SOMA -> +
Token: INT_CONSTANTE -> 1
Token: FECHA_PARENTESES -> )
Token: ABRE_CHAVES -> {
Token: RESERVADA -> if
Token: ABRE_PARENTESES -> (
Token: IDENTIFICADOR -> lista
Token: ABRE_VETOR -> [
Token: IDENTIFICADOR -> i
Token: FECHA_VETOR -> ]
Token: DIFERENTE -> !=
Token: SUBTRACAO -> -
Token: INT_CONSTANTE -> 1
Token: FECHA_PARENTESES -> )
Token: ABRE_CHAVES -> {
Token: RESERVADA -> print
Token: IDENTIFICADOR -> lista
Token: ABRE_VETOR -> [
Token: IDENTIFICADOR -> i
Token: FECHA_VETOR -> ]
Token: PONTO_E_VIRGULA -> ;
Token: RESERVADA -> print
Token: STRING_CONSTANTE -> ""
Token: PONTO_E_VIRGULA -> ;
Token: FECHA_CHAVES -> }
Token: RESERVADA -> else
Token: RESERVADA -> return
Token: INT_CONSTANTE -> 0
Token: PONTO_E_VIRGULA -> ;
Token: IDENTIFICADOR -> return0
Token: PONTO_E_VIRGULA -> ;
Token: FECHA_CHAVES -> }
Token: FECHA_CHAVES -> }
Token: RESERVADA -> int
Token: IDENTIFICADOR -> factorial
Token: ABRE_PARENTESES -> (
Token: FECHA_PARENTESES -> )
Token: ABRE_CHAVES -> {
Token: RESERVADA -> int
Token: IDENTIFICADOR -> i
Token: IDENTIFICADOR -> fatorial
Token: IDENTIFICADOR -> resultado
Token: PONTO_E_VIRGULA -> ;
Token: RESERVADA -> for
Token: ABRE_PARENTESES -> (
Token: IDENTIFICADOR -> i
Token: ATRIBUICAO -> =
Token: INT_CONSTANTE -> 1
Token: PONTO_E_VIRGULA -> ;
Token: IDENTIFICADOR -> i
Token: MENOR -> <
Token: IDENTIFICADOR -> fatorial
Token: PONTO_E_VIRGULA -> ;
Token: IDENTIFICADOR -> i
Token: INCREMENTO -> ++
Token: FECHA_PARENTESES -> )
Token: ABRE_CHAVES -> {
Token: IDENTIFICADOR -> resultado
Token: MULTIPLICACAO -> *
Token: ATRIBUICAO -> =
Token: IDENTIFICADOR -> i
Token: PONTO_E_VIRGULA -> ;
Token: FECHA_CHAVES -> }
Token: FECHA_CHAVES -> }
Token: RESERVADA -> print
Token: IDENTIFICADOR -> resultado
Token: PONTO_E_VIRGULA -> ;
